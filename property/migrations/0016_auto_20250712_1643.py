# Generated by Django 5.2.4 on 2025-07-12 13:43

from django.db import migrations


def transfer_owners_to_new_model(apps, schema_editor):
    Flat = apps.get_model('property', 'Flat')
    Owner = apps.get_model('property', 'Owner')

    for flat in Flat.objects.all().iterator():
        if not flat.owner or not flat.owners_phonenumber:
            continue

        owner, created = Owner.objects.get_or_create(
            name=flat.owner.strip(),
            phone=flat.owners_phonenumber.strip(),
            defaults={
                'pure_phone': flat.owner_pure_phone or '',
            }
        )

        flat.owners.add(owner)
        owner.owned_flats.add(flat)


def reverse_transfer_owners_to_new_model(apps, schema_editor):
    Flat = apps.get_model('property', 'Flat')
    Owner = apps.get_model('property', 'Owner')
    for flat in Flat.objects.all().iterator():
        flat.owners.clear()
    for owner in Owner.objects.all().iterator():
        owner.owned_flats.clear()

    Owner.objects.all().delete()


class Migration(migrations.Migration):
    dependencies = [
        ("property", "0015_owner_owned_flats"),
    ]

    operations = [
        migrations.RunPython(
            transfer_owners_to_new_model,
            reverse_transfer_owners_to_new_model,
        ),
    ]